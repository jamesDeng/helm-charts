# RBAC authn and authz
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Values.es.name }}
  namespace: {{ .Values.namespace }}
  labels:
    k8s-app: {{ .Values.es.name }}
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
    chart: {{ template "efk.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ .Values.es.name }}
  labels:
    k8s-app: {{ .Values.es.name }}
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
    chart: {{ template "efk.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
rules:
- apiGroups:
  - ""
  resources:
  - "services"
  - "namespaces"
  - "endpoints"
  verbs:
  - "get"
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ .Values.es.name }}
  namespace: {{ .Values.namespace }}
  labels:
    k8s-app: {{ .Values.es.name }}
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
subjects:
- kind: ServiceAccount
  name: {{ .Values.es.name }}
  namespace: {{ .Values.namespace }}
  apiGroup: ""
roleRef:
  kind: ClusterRole
  name: {{ .Values.es.name }}
  apiGroup: ""
---
# Elasticsearch deployment itself
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.es.name }}
  namespace: {{ .Values.namespace }}
  labels:
    k8s-app: {{ .Values.es.name }}
    version: {{ .Values.es.image.tag }}
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
    chart: {{ template "efk.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  serviceName: {{ .Values.es.name }}
  replicas: {{ .Values.es.replicas }}
  selector:
    matchLabels:
      k8s-app: {{ .Values.es.name }}
      version: {{ .Values.es.image.tag }}
  template:
    metadata:
      labels:
        k8s-app: {{ .Values.es.name }}
        version: {{ .Values.es.image.tag }}
        kubernetes.io/cluster-service: "true"
    spec:
      serviceAccountName: {{ .Values.es.name }}
      containers:
      - image: {{ .Values.es.image.repo }}:{{ .Values.es.image.tag }}
        name: {{ .Values.es.name }}
        resources:
          # need more cpu upon initialization, therefore burstable class
          limits:
            cpu: {{ .Values.es.resources.limits.cpu }}
          requests:
            cpu: {{ .Values.es.resources.requests.cpu }}
        ports:
        - containerPort: 9200
          name: db
          protocol: TCP
        - containerPort: 9300
          name: transport
          protocol: TCP
        volumeMounts:
        - name: {{ .Values.es.name }}
          mountPath: /data
        env:
        - name: "NAMESPACE"
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
      {{- if not .Values.es.pvc.enable }}
      volumes:
      - name: {{ .Values.es.name }}
        emptyDir: {}
      {{- end }}
      # Elasticsearch requires vm.max_map_count to be at least 262144.
      # If your OS already sets up this number to a higher value, feel free
      # to remove this init container.
      initContainers:
      - image: alpine:3.6
        command: ["/sbin/sysctl", "-w", "vm.max_map_count=262144"]
        name: elasticsearch-logging-init
        securityContext:
          privileged: true
  {{- if .Values.es.pvc.enable }}
  volumeClaimTemplates: #阿里云盘存储
  - metadata:
      name: "{{ .Values.es.name }}"
    spec:
      accessModes:
      - ReadWriteOnce
      storageClassName: {{ .Values.es.pvc.storageClassName }}
      resources:
        requests:
          storage: {{ .Values.es.pvc.storage }}
  {{ end }}
