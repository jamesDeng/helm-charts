apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.kibana.name }}
  namespace: {{ .Values.namespace }}
  labels:
    k8s-app: {{ .Values.kibana.name }}
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
    chart: {{ template "efk.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: {{ .Values.kibana.name }}
  template:
    metadata:
      labels:
        k8s-app: {{ .Values.kibana.name }}
    spec:
      containers:
      - name: {{ .Values.kibana.name }}
        image: {{ .Values.kibana.image.repo }}:{{ .Values.kibana.image.tag }}
        resources:
          # need more cpu upon initialization, therefore burstable class
          limits:
            cpu: {{ .Values.kibana.resources.limits.cpu }}
          requests:
            cpu: {{ .Values.kibana.resources.requests.cpu }}
        env:
          - name: ELASTICSEARCH_URL
            value: http://{{ .Values.es.name }}:9200
          - name: SERVER_BASEPATH
            value: ""
          - name: XPACK_MONITORING_ENABLED
            value: "false"
          - name: XPACK_SECURITY_ENABLED
            value: "false"
        ports:
        - containerPort: {{ .Values.kibana.port }}
          name: ui
          protocol: TCP